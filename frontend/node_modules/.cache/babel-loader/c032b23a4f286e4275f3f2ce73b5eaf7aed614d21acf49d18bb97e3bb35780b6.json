{"ast":null,"code":"class ApiLibrary{constructor(){this.GetThumbData=async videoCode=>{let json=await(await fetch(\"http://localhost:8080/api/video/thumb/\".concat(videoCode))// await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\n).json();return json;};this.GetViewData=async videoCode=>{console.log(\"requesting GetViewData as \"+videoCode);let json=await(await fetch(\"http://localhost:8080/api/video/view/\".concat(videoCode))// await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\n).json();return json;};}}export default ApiLibrary;","map":{"version":3,"names":["ApiLibrary","constructor","GetThumbData","videoCode","json","fetch","concat","GetViewData","console","log"],"sources":["F:/[STS4 Storage]/Dionysos/frontend/src/Library.js"],"sourcesContent":["\r\n\r\n\r\nclass ApiLibrary{\r\n\r\n    GetThumbData = async (videoCode) => {\r\n        \r\n        let json = await (\r\n            await fetch(`http://localhost:8080/api/video/thumb/${videoCode}`)\r\n            // await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\r\n        ).json();\r\n\r\n        return json\r\n    };\r\n    GetViewData = async (videoCode) => {\r\n        console.log(\"requesting GetViewData as \" + videoCode);\r\n        let json = await (\r\n            await fetch(`http://localhost:8080/api/video/view/${videoCode}`)\r\n            // await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\r\n        ).json();\r\n\r\n        return json\r\n    };\r\n}\r\n\r\n\r\nexport default ApiLibrary;"],"mappings":"AAGA,KAAM,CAAAA,UAAU,CAAAC,YAAA,OAEZC,YAAY,CAAG,KAAO,CAAAC,SAAS,EAAK,CAEhC,GAAI,CAAAC,IAAI,CAAG,KAAM,CACb,KAAM,CAAAC,KAAK,0CAAAC,MAAA,CAA0CH,SAAS,CAAE,CAChE;AAAA,EACFC,IAAI,CAAC,CAAC,CAER,MAAO,CAAAA,IAAI,CACf,CAAC,MACDG,WAAW,CAAG,KAAO,CAAAJ,SAAS,EAAK,CAC/BK,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAGN,SAAS,CAAC,CACrD,GAAI,CAAAC,IAAI,CAAG,KAAM,CACb,KAAM,CAAAC,KAAK,yCAAAC,MAAA,CAAyCH,SAAS,CAAE,CAC/D;AAAA,EACFC,IAAI,CAAC,CAAC,CAER,MAAO,CAAAA,IAAI,CACf,CAAC,EACL,CAGA,cAAe,CAAAJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}