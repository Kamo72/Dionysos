{"ast":null,"code":"import React from'react';import{ApiLibrary,CookieLibrary}from'../../Library';import{useParams}from'react-router-dom';import{serverRoot}from'../../App.js';import Card from'../../Components/Card.js';import\"./ChannelPage.css\";import{ImageInterface}from'./UploadPage.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function withParams(Component){return props=>/*#__PURE__*/_jsx(Component,{...props,params:useParams()});}class ChannelPage extends React.Component{constructor(props){super(props);this.PostChImage=async()=>{const postData={channelId:this.state.channelId,imageUpload:this.state.imageUpload};const response=await(//요청\nawait fetch(serverRoot+\"/api/channel/image\",{method:\"POST\",// 또는 'PUT'\nheaders:{\"Content-Type\":\"application/json\"},body:JSON.stringify(postData)}));response.json().then(error=>{console.log(error.message);// 서버에서 전달한 오류 메시지를 throw\nalert(error.message);});if(response.status==200){alert(\"채널 이미지 재설정에 성공했습니다.\");window.location.replace(\"\".concat(window.location.origin,\"/channel/\").concat(this.userId));}else{alert(\"채널 이미지 재설정에 실패했습니다.\");}};this.state={userId:null,channelId:\"\",windowSize:[window.innerWidth,window.innerHeight],videoCodeList:[],channelName:\"\",channelImg:null,imageUpload:null};this.state={...this.state,channelId:props.params.id};const handleResize=()=>{this.setState(current=>{return{windowSize:[window.innerWidth,window.innerHeight]};});};window.addEventListener(\"resize\",handleResize);}componentDidMount(){const aLib=new ApiLibrary();aLib.GetProfileBasic(this.state.channelId).then(e=>{const img=e.userImg;const name=e.userName;this.setState(cur=>{return{userImg:img};});this.setState(cur=>{return{channelName:name};});});aLib.GetChannelVideos(this.state.channelId).then(e=>{const list=e.videoCodes;this.setState(cur=>{return{videoCodeList:list};});});const cLib=new CookieLibrary();const userId=cLib.GetCookieUserId();this.setState(current=>{return{userId:userId};});}render(){const margin=30;const sizeMin=300;const columnCount=Math.floor(window.innerWidth/sizeMin);const thumbWidth=(window.innerWidth-margin*2)/columnCount;const thumbHeight=Math.floor(thumbWidth*0.8);console.log(this.state.userId+\" ... \"+this.state.channelId);return/*#__PURE__*/_jsxs(\"div\",{className:\"SearchPage\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ChannelProfile\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ProfileContainer\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"ProfileImage\",src:this.state.channelImg==null?\"https://i.pinimg.com/564x/d5/b0/4c/d5b04cc3dcd8c17702549ebc5f1acf1a.jpg\":\"\".concat(serverRoot,\"/api/chImg/\").concat(this.state.channelImg)}),/*#__PURE__*/_jsx(\"div\",{className:\"ProfileContainer\",children:/*#__PURE__*/_jsx(\"p\",{className:\"ProfileName\",children:this.state.channelName})}),this.state.userId==this.state.channelId?/*#__PURE__*/_jsxs(\"div\",{style:{width:\"500px\",display:\"flex\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(ImageInterface,{updater:v=>this.setState(cur=>{return{imageUpload:v};}),getter:()=>{return this.state.imageUpload;}}),/*#__PURE__*/_jsx(\"button\",{className:\"ConfirmButton\",onClick:()=>this.PostChImage(),style:{width:\"200px\"},children:\"\\uCC44\\uB110 \\uC774\\uBBF8\\uC9C0 \\uC124\\uC815\"})]}):/*#__PURE__*/_jsx(\"div\",{})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"SearchAnnounce\",children:/*#__PURE__*/_jsx(\"i\",{style:{margin:\"10px\"},children:\"Videos of this channel...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"VideoGrid\",style:{gridTemplateColumns:\"repeat(\"+columnCount+\", \"+thumbWidth+\"px)\",gridTemplateRows:\"repeat(\"+10+\", \"+thumbHeight+\"px)\"},children:this.state.videoCodeList.map(item=>/*#__PURE__*/_jsx(Card,{videoCode:item,width:thumbWidth,height:thumbHeight}))})]});}}export default withParams(ChannelPage);","map":{"version":3,"names":["React","ApiLibrary","CookieLibrary","useParams","serverRoot","Card","ImageInterface","jsx","_jsx","jsxs","_jsxs","withParams","Component","props","params","ChannelPage","constructor","PostChImage","postData","channelId","state","imageUpload","response","fetch","method","headers","body","JSON","stringify","json","then","error","console","log","message","alert","status","window","location","replace","concat","origin","userId","windowSize","innerWidth","innerHeight","videoCodeList","channelName","channelImg","id","handleResize","setState","current","addEventListener","componentDidMount","aLib","GetProfileBasic","e","img","userImg","name","userName","cur","GetChannelVideos","list","videoCodes","cLib","GetCookieUserId","render","margin","sizeMin","columnCount","Math","floor","thumbWidth","thumbHeight","className","children","src","style","width","display","alignItems","updater","v","getter","onClick","gridTemplateColumns","gridTemplateRows","map","item","videoCode","height"],"sources":["S:/[SpringSTS4]/Dionysos/frontend/src/Modules/Pages/ChannelPage.js"],"sourcesContent":["import React from 'react';\r\nimport { ApiLibrary, CookieLibrary } from '../../Library';\r\nimport { useParams } from 'react-router-dom';\r\nimport { serverRoot } from '../../App.js'\r\nimport Card from '../../Components/Card.js';\r\nimport \"./ChannelPage.css\"\r\nimport { ImageInterface } from './UploadPage.js';\r\n\r\n\r\n\r\nfunction withParams(Component)\r\n{\r\n    return (props) => <Component{...props} params={useParams()}/>;\r\n}\r\n\r\n\r\nclass ChannelPage extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n\r\n        this.state = {\r\n            ...this.state,\r\n            channelId: props.params.id\r\n        };\r\n\r\n        const handleResize = () => {\r\n            this.setState(\r\n                current => {return {windowSize : [window.innerWidth, window.innerHeight]}} \r\n            )\r\n        }\r\n        window.addEventListener(\"resize\", handleResize);\r\n        \r\n    }\r\n\r\n    PostChImage= async () =>\r\n    {\r\n        const postData = {\r\n            channelId : this.state.channelId,\r\n            imageUpload : this.state.imageUpload,\r\n        }\r\n\r\n        const response = await(\r\n            //요청\r\n            await fetch(serverRoot + \"/api/channel/image\", {\r\n                method: \"POST\", // 또는 'PUT'\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(postData),\r\n            })\r\n        );\r\n\r\n        response.json().then(error => {\r\n            console.log(error.message); // 서버에서 전달한 오류 메시지를 throw\r\n            alert(error.message);\r\n        });\r\n\r\n        if(response.status == 200)\r\n        {\r\n            alert(\"채널 이미지 재설정에 성공했습니다.\");\r\n            window.location.replace(`${window.location.origin}/channel/${this.userId}`)\r\n        }\r\n        else\r\n        {\r\n            alert(\"채널 이미지 재설정에 실패했습니다.\");\r\n        }\r\n    }\r\n\r\n    state = {\r\n        userId : null,\r\n        channelId : \"\",\r\n        windowSize : [window.innerWidth, window.innerHeight],\r\n        videoCodeList : [],\r\n\r\n        channelName : \"\",\r\n        channelImg : null,\r\n        imageUpload : null,\r\n    };\r\n\r\n    componentDidMount()\r\n    {\r\n        const aLib = new ApiLibrary();\r\n\r\n        aLib.GetProfileBasic(this.state.channelId).then(e=>{\r\n\r\n            const img = e.userImg;\r\n            const name = e.userName;\r\n            this.setState(cur=>{return{userImg : img}})\r\n            this.setState(cur=>{return{channelName : name}})\r\n        })\r\n\r\n        aLib.GetChannelVideos(this.state.channelId).then(e=>{\r\n\r\n            const list = e.videoCodes;\r\n            this.setState(cur=>{return{videoCodeList : list}})\r\n        })\r\n\r\n        \r\n        const cLib = new CookieLibrary()\r\n        const userId = cLib.GetCookieUserId();\r\n        this.setState(current => {return {userId : userId}} )\r\n    }\r\n\r\n    render(){\r\n    \r\n        const margin = 30\r\n        const sizeMin = 300\r\n        const columnCount =  Math.floor(window.innerWidth/sizeMin);\r\n        const thumbWidth = ((window.innerWidth - margin * 2) / columnCount);\r\n        const thumbHeight = Math.floor(thumbWidth * 0.8);\r\n\r\n        console.log(this.state.userId + \" ... \" + this.state.channelId)\r\n\t\treturn (<div className='SearchPage'\r\n            >\r\n            <div className='ChannelProfile'>\r\n                <div className='ProfileContainer'>\r\n                    <img className='ProfileImage'\r\n                        src = {this.state.channelImg == null?\r\n                            \"https://i.pinimg.com/564x/d5/b0/4c/d5b04cc3dcd8c17702549ebc5f1acf1a.jpg\": \r\n                            `${serverRoot}/api/chImg/${this.state.channelImg}`}></img>\r\n                    <div className='ProfileContainer'>\r\n                        <p className='ProfileName'>{this.state.channelName}</p>\r\n                    </div>\r\n                    {this.state.userId == this.state.channelId? <div \r\n                        style={{\r\n                            width : \"500px\",\r\n                            display : \"flex\",\r\n                            alignItems : \"center\",\r\n                        }}>\r\n                        <ImageInterface\r\n                            updater = {v => this.setState(cur=>{return {imageUpload : v}})}\r\n                            getter = {()=> {return this.state.imageUpload}}\r\n                        ></ImageInterface>\r\n                        <button className = \"ConfirmButton\"\r\n                            onClick={() => this.PostChImage()}\r\n                            style={{\r\n                                width : \"200px\",\r\n                            }}\r\n                        >채널 이미지 설정</button>\r\n                    </div>:<div/>}\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <div className='SearchAnnounce'>\r\n                <i style={{margin : \"10px\"}}>Videos of this channel...</i>\r\n            </div>\r\n            <div className=\"VideoGrid\"\r\n                style = {{\r\n                    gridTemplateColumns : \"repeat(\" + columnCount +\", \" + thumbWidth + \"px)\",\r\n                    gridTemplateRows : \"repeat(\" + 10  +\", \" + thumbHeight +\"px)\",\r\n                }}>\r\n                {this.state.videoCodeList.map(item => \r\n                    <Card videoCode = {item} width = {thumbWidth} height = {thumbHeight}></Card>\r\n                )}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withParams(ChannelPage)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}