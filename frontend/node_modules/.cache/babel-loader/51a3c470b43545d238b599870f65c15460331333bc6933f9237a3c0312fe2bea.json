{"ast":null,"code":"var _jsxFileName = \"F:\\\\[STS4 Storage]\\\\Dionysos\\\\frontend\\\\src\\\\Modules\\\\Pages\\\\MainPage.js\";\nimport React from 'react';\nimport \"./MainPage.css\";\nimport Card from \"../../Components/Card\";\nimport { ApiLibrary } from '../../Library';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowSize: [window.innerWidth, window.innerHeight],\n      videoCodeList: []\n    };\n    const handleResize = () => {\n      this.setState(current => ({\n        windowSize: [window.innerWidth, window.innerHeight]\n      }));\n    };\n    window.addEventListener(\"resize\", handleResize);\n  }\n  componentDidMount() {\n    const aLib = new ApiLibrary();\n    aLib.GetRandomVideos(this.state.keyword).then(e => {\n      const list = e.videoCodes;\n      this.setState(cur => {\n        return {\n          videoCodeList: list\n        };\n      });\n    });\n  }\n  render() {\n    const margin = 30;\n    const sizeMin = 300;\n    const columnCount = Math.floor(window.innerWidth / sizeMin);\n    const thumbWidth = (window.innerWidth - margin * 2) / columnCount;\n    const thumbHeight = Math.floor(thumbWidth * 0.8);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MainPage\",\n      style: {\n        gridTemplateColumns: \"repeat(\" + columnCount + \", \" + thumbWidth + \"px)\",\n        gridTemplateRows: \"repeat(\" + 10 + \", \" + thumbHeight + \"px)\"\n      },\n      children: this.state.videoCodeList.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        videoCode: item,\n        width: thumbWidth,\n        height: thumbHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this);\n  }\n}\nexport default MainPage;","map":{"version":3,"names":["React","Card","ApiLibrary","jsxDEV","_jsxDEV","MainPage","Component","constructor","props","state","windowSize","window","innerWidth","innerHeight","videoCodeList","handleResize","setState","current","addEventListener","componentDidMount","aLib","GetRandomVideos","keyword","then","e","list","videoCodes","cur","render","margin","sizeMin","columnCount","Math","floor","thumbWidth","thumbHeight","className","style","gridTemplateColumns","gridTemplateRows","children","map","item","videoCode","width","height","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["F:/[STS4 Storage]/Dionysos/frontend/src/Modules/Pages/MainPage.js"],"sourcesContent":["import React from 'react';\r\nimport \"./MainPage.css\"\r\nimport Card from \"../../Components/Card\"\r\nimport { ApiLibrary } from '../../Library';\r\n\r\nclass MainPage extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        const handleResize = () => {\r\n            this.setState(\r\n                current => ({windowSize : [window.innerWidth, window.innerHeight]}) \r\n            )\r\n        }\r\n        window.addEventListener(\"resize\", handleResize);\r\n    }\r\n\r\n    state = {\r\n        windowSize : [window.innerWidth, window.innerHeight],\r\n        videoCodeList : [],\r\n    };\r\n\r\n    componentDidMount()\r\n    {\r\n        const aLib = new ApiLibrary();\r\n        aLib.GetRandomVideos(this.state.keyword).then(e=>{\r\n\r\n            const list = e.videoCodes;\r\n            this.setState(cur=>{return{videoCodeList : list}})\r\n        })\r\n    }\r\n\r\n    rend\r\n\r\n\trender() \r\n\t{\r\n        const margin = 30\r\n        const sizeMin = 300\r\n        const columnCount =  Math.floor(window.innerWidth/sizeMin);\r\n        const thumbWidth = ((window.innerWidth - margin * 2) / columnCount);\r\n        const thumbHeight = Math.floor(thumbWidth * 0.8);\r\n\r\n\t\treturn (<div className='MainPage'\r\n                style = {{\r\n                    gridTemplateColumns : \"repeat(\" + columnCount +\", \" + thumbWidth + \"px)\",\r\n                    gridTemplateRows : \"repeat(\" + 10  +\", \" + thumbHeight +\"px)\",\r\n                }}\r\n            >\r\n            {this.state.videoCodeList.map(item => \r\n                <Card videoCode = {item} width = {thumbWidth} height = {thumbHeight}></Card>\r\n            )}\r\n        </div>);\r\n\t}\r\n}\r\n\r\nexport default MainPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,uBAAuB;AACxC,SAASC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,SAASL,KAAK,CAACM,SAAS,CACtC;EACIC,WAAWA,CAACC,KAAK,EACjB;IACI,KAAK,CAACA,KAAK,CAAC;IAAA,KAShBC,KAAK,GAAG;MACJC,UAAU,EAAG,CAACC,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;MACpDC,aAAa,EAAG;IACpB,CAAC;IAXG,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACvB,IAAI,CAACC,QAAQ,CACTC,OAAO,KAAK;QAACP,UAAU,EAAG,CAACC,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW;MAAC,CAAC,CACtE,CAAC;IACL,CAAC;IACDF,MAAM,CAACO,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;EACnD;EAOAI,iBAAiBA,CAAA,EACjB;IACI,MAAMC,IAAI,GAAG,IAAIlB,UAAU,CAAC,CAAC;IAC7BkB,IAAI,CAACC,eAAe,CAAC,IAAI,CAACZ,KAAK,CAACa,OAAO,CAAC,CAACC,IAAI,CAACC,CAAC,IAAE;MAE7C,MAAMC,IAAI,GAAGD,CAAC,CAACE,UAAU;MACzB,IAAI,CAACV,QAAQ,CAACW,GAAG,IAAE;QAAC,OAAM;UAACb,aAAa,EAAGW;QAAI,CAAC;MAAA,CAAC,CAAC;IACtD,CAAC,CAAC;EACN;EAIHG,MAAMA,CAAA,EACN;IACO,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,OAAO,GAAG,GAAG;IACnB,MAAMC,WAAW,GAAIC,IAAI,CAACC,KAAK,CAACtB,MAAM,CAACC,UAAU,GAACkB,OAAO,CAAC;IAC1D,MAAMI,UAAU,GAAI,CAACvB,MAAM,CAACC,UAAU,GAAGiB,MAAM,GAAG,CAAC,IAAIE,WAAY;IACnE,MAAMI,WAAW,GAAGH,IAAI,CAACC,KAAK,CAACC,UAAU,GAAG,GAAG,CAAC;IAEtD,oBAAQ9B,OAAA;MAAKgC,SAAS,EAAC,UAAU;MACnBC,KAAK,EAAI;QACLC,mBAAmB,EAAG,SAAS,GAAGP,WAAW,GAAE,IAAI,GAAGG,UAAU,GAAG,KAAK;QACxEK,gBAAgB,EAAG,SAAS,GAAG,EAAE,GAAG,IAAI,GAAGJ,WAAW,GAAE;MAC5D,CAAE;MAAAK,QAAA,EAEL,IAAI,CAAC/B,KAAK,CAACK,aAAa,CAAC2B,GAAG,CAACC,IAAI,iBAC9BtC,OAAA,CAACH,IAAI;QAAC0C,SAAS,EAAID,IAAK;QAACE,KAAK,EAAIV,UAAW;QAACW,MAAM,EAAIV;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAC/E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EACb;AACD;AAEA,eAAe5C,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}