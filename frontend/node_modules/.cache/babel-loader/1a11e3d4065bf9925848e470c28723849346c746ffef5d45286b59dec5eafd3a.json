{"ast":null,"code":"import{serverRoot}from\"./App\";export class ApiLibrary{constructor(){this.GetThumbData=async videoCode=>{let json=await(await fetch(\"\".concat(serverRoot,\"/api/video/thumb/\").concat(videoCode))// await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\n).json();return json;};this.GetViewData=async videoCode=>{console.log(\"requesting GetViewData as \"+videoCode);let json=await(await fetch(\"\".concat(serverRoot,\"/api/video/view/\").concat(videoCode))// await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\n).json();return json;};this.GetProfileBasic=async userCode=>{console.log(\"requesting GetProfileBasic as \"+userCode);let json=await(await fetch(\"\".concat(serverRoot,\"/api/channel/basic/\").concat(userCode))// await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\n).json();return json;};this.GetSearchData=async keyword=>{console.log(\"requesting GetSearchData as \"+keyword);let json=await(await fetch(\"\".concat(serverRoot,\"/api/video/search/\").concat(keyword))// await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\n).json();return json;};}}export class CookieLibrary{constructor(){this.GetCookieUserId=()=>{return this.GetCookieValue(\"userId\");};this.GetCookieValue=name=>{// document.cookie 문자열에서 각 쿠키를 세미콜론으로 분리\nconst cookies=document.cookie.split(';');// 각 쿠키를 순회하며 원하는 쿠키를 찾음\nfor(let cookie of cookies){// 쿠키 앞뒤의 공백을 제거\ncookie=cookie.trim();// 쿠키 이름과 값으로 분리\nconst[cookieName,cookieValue]=cookie.split('=');// 원하는 쿠키 이름과 일치하면 값을 반환\nif(cookieName.trim()===name){return decodeURIComponent(cookieValue);// 쿠키 값 디코딩 후 반환\n}}// 원하는 쿠키를 찾지 못했을 경우 null 반환\nreturn null;};this.GetAllCookies=()=>{const cookies=document.cookie.split(';');const cookieMap={};for(let cookie of cookies){const[name,value]=cookie.trim().split('=');cookieMap[name]=decodeURIComponent(value);}return cookieMap;};}}","map":{"version":3,"names":["serverRoot","ApiLibrary","constructor","GetThumbData","videoCode","json","fetch","concat","GetViewData","console","log","GetProfileBasic","userCode","GetSearchData","keyword","CookieLibrary","GetCookieUserId","GetCookieValue","name","cookies","document","cookie","split","trim","cookieName","cookieValue","decodeURIComponent","GetAllCookies","cookieMap","value"],"sources":["F:/[STS4 Storage]/Dionysos/frontend/src/Library.js"],"sourcesContent":["\r\nimport { serverRoot } from \"./App\";\r\n\r\n\r\nexport class ApiLibrary{\r\n\r\n    GetThumbData = async (videoCode) => {\r\n        \r\n        let json = await (\r\n            await fetch(`${serverRoot}/api/video/thumb/${videoCode}`)\r\n            // await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\r\n        ).json();\r\n\r\n        return json\r\n    };\r\n    GetViewData = async (videoCode) => {\r\n        console.log(\"requesting GetViewData as \" + videoCode);\r\n        let json = await (\r\n            await fetch(`${serverRoot}/api/video/view/${videoCode}`)\r\n            // await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\r\n        ).json();\r\n\r\n        return json\r\n    };\r\n\r\n\r\n    GetProfileBasic = async (userCode) => {\r\n        console.log(\"requesting GetProfileBasic as \" + userCode);\r\n        let json = await (\r\n            await fetch(`${serverRoot}/api/channel/basic/${userCode}`)\r\n            // await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\r\n        ).json();\r\n\r\n        return json\r\n    };\r\n\r\n    \r\n\r\n    GetSearchData = async (keyword) => {\r\n        console.log(\"requesting GetSearchData as \" + keyword);\r\n        let json = await (\r\n            await fetch(`${serverRoot}/api/video/search/${keyword}`)\r\n            // await fetch(`${window.location.origin}/api/video/thumb/${videoCode}`)\r\n        ).json();\r\n\r\n        return json\r\n    };\r\n}\r\n\r\n\r\n\r\nexport class CookieLibrary{\r\n\r\n    GetCookieUserId = ()=>\r\n    {\r\n        return this.GetCookieValue(\"userId\");\r\n    }\r\n\r\n    GetCookieValue = (name) => {\r\n        // document.cookie 문자열에서 각 쿠키를 세미콜론으로 분리\r\n        const cookies = document.cookie.split(';');\r\n        \r\n        // 각 쿠키를 순회하며 원하는 쿠키를 찾음\r\n        for (let cookie of cookies) {\r\n            // 쿠키 앞뒤의 공백을 제거\r\n            cookie = cookie.trim();\r\n            \r\n            // 쿠키 이름과 값으로 분리\r\n            const [cookieName, cookieValue] = cookie.split('=');\r\n            \r\n            // 원하는 쿠키 이름과 일치하면 값을 반환\r\n            if (cookieName.trim() === name) {\r\n                return decodeURIComponent(cookieValue); // 쿠키 값 디코딩 후 반환\r\n            }\r\n        }\r\n        \r\n        // 원하는 쿠키를 찾지 못했을 경우 null 반환\r\n        return null;\r\n    }\r\n    \r\n    GetAllCookies = () => {\r\n        const cookies = document.cookie.split(';');\r\n        const cookieMap = {};\r\n    \r\n        for (let cookie of cookies) {\r\n            const [name, value] = cookie.trim().split('=');\r\n            cookieMap[name] = decodeURIComponent(value);\r\n        }\r\n    \r\n        return cookieMap;\r\n    }\r\n}"],"mappings":"AACA,OAASA,UAAU,KAAQ,OAAO,CAGlC,MAAO,MAAM,CAAAC,UAAU,CAAAC,YAAA,OAEnBC,YAAY,CAAG,KAAO,CAAAC,SAAS,EAAK,CAEhC,GAAI,CAAAC,IAAI,CAAG,KAAM,CACb,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIP,UAAU,sBAAAO,MAAA,CAAoBH,SAAS,CAAE,CACxD;AAAA,EACFC,IAAI,CAAC,CAAC,CAER,MAAO,CAAAA,IAAI,CACf,CAAC,MACDG,WAAW,CAAG,KAAO,CAAAJ,SAAS,EAAK,CAC/BK,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAGN,SAAS,CAAC,CACrD,GAAI,CAAAC,IAAI,CAAG,KAAM,CACb,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIP,UAAU,qBAAAO,MAAA,CAAmBH,SAAS,CAAE,CACvD;AAAA,EACFC,IAAI,CAAC,CAAC,CAER,MAAO,CAAAA,IAAI,CACf,CAAC,MAGDM,eAAe,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAClCH,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAGE,QAAQ,CAAC,CACxD,GAAI,CAAAP,IAAI,CAAG,KAAM,CACb,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIP,UAAU,wBAAAO,MAAA,CAAsBK,QAAQ,CAAE,CACzD;AAAA,EACFP,IAAI,CAAC,CAAC,CAER,MAAO,CAAAA,IAAI,CACf,CAAC,MAIDQ,aAAa,CAAG,KAAO,CAAAC,OAAO,EAAK,CAC/BL,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAGI,OAAO,CAAC,CACrD,GAAI,CAAAT,IAAI,CAAG,KAAM,CACb,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIP,UAAU,uBAAAO,MAAA,CAAqBO,OAAO,CAAE,CACvD;AAAA,EACFT,IAAI,CAAC,CAAC,CAER,MAAO,CAAAA,IAAI,CACf,CAAC,EACL,CAIA,MAAO,MAAM,CAAAU,aAAa,CAAAb,YAAA,OAEtBc,eAAe,CAAG,IAClB,CACI,MAAO,KAAI,CAACC,cAAc,CAAC,QAAQ,CAAC,CACxC,CAAC,MAEDA,cAAc,CAAIC,IAAI,EAAK,CACvB;AACA,KAAM,CAAAC,OAAO,CAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAE1C;AACA,IAAK,GAAI,CAAAD,MAAM,GAAI,CAAAF,OAAO,CAAE,CACxB;AACAE,MAAM,CAAGA,MAAM,CAACE,IAAI,CAAC,CAAC,CAEtB;AACA,KAAM,CAACC,UAAU,CAAEC,WAAW,CAAC,CAAGJ,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAEnD;AACA,GAAIE,UAAU,CAACD,IAAI,CAAC,CAAC,GAAKL,IAAI,CAAE,CAC5B,MAAO,CAAAQ,kBAAkB,CAACD,WAAW,CAAC,CAAE;AAC5C,CACJ,CAEA;AACA,MAAO,KAAI,CACf,CAAC,MAEDE,aAAa,CAAG,IAAM,CAClB,KAAM,CAAAR,OAAO,CAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAC1C,KAAM,CAAAM,SAAS,CAAG,CAAC,CAAC,CAEpB,IAAK,GAAI,CAAAP,MAAM,GAAI,CAAAF,OAAO,CAAE,CACxB,KAAM,CAACD,IAAI,CAAEW,KAAK,CAAC,CAAGR,MAAM,CAACE,IAAI,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CAC9CM,SAAS,CAACV,IAAI,CAAC,CAAGQ,kBAAkB,CAACG,KAAK,CAAC,CAC/C,CAEA,MAAO,CAAAD,SAAS,CACpB,CAAC,EACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}